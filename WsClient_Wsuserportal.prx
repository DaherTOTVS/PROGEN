#INCLUDE "protheus.ch"
#INCLUDE "apwebsrv.ch"

/* ===============================================================================
WSDL Location    http://localhost:8059/ws/USERPORTAL.apw?WSDL
Gerado em        12/14/20 11:25:56
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _NXVLHHK ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSUSERPORTAL
------------------------------------------------------------------------------- */

WSCLIENT WSUSERPORTAL

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD PRTAMBIENTE
	WSMETHOD PRTGETCLIENTSBYUSER
	WSMETHOD PRTGETGROUP
	WSMETHOD PRTHEADER
	WSMETHOD PRTLISTMENU
	WSMETHOD PRTLISTPORTALS
	WSMETHOD PRTLOGIN
	WSMETHOD PRTLOGOUT
	WSMETHOD PRTPSWUSER
	WSMETHOD PRTPUTUSER

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   oWSPRTAMBIENTERESULT      AS USERPORTAL_SAMBIENTE
	WSDATA   cUSERCODE                 AS string
	WSDATA   oWSPRTGETCLIENTSBYUSERRESULT AS USERPORTAL_ARRAYOFSTRING
	WSDATA   oWSPRTGETGROUPRESULT      AS USERPORTAL_ARRAYOFLOGINUSERSTRUCT
	WSDATA   cHEADERTYPE               AS string
	WSDATA   oWSPRTHEADERRESULT        AS USERPORTAL_ARRAYOFBRWHEADER
	WSDATA   cUSERPORTALCODE           AS string
	WSDATA   cUSERLOGIN                AS string
	WSDATA   oWSPRTLISTMENURESULT      AS USERPORTAL_ARRAYOFLOGINMENU
	WSDATA   oWSPRTLISTPORTALSRESULT   AS USERPORTAL_ARRAYOFGENERICSTRUCT
	WSDATA   cUSERPASSWORD             AS string
	WSDATA   cUSERTYPE                 AS string
	WSDATA   cPORTALACCESS             AS string
	WSDATA   cUSERIPADDR               AS string
											 
	WSDATA   oWSPRTLOGINRESULT         AS USERPORTAL_LOGINUSERSTRUCT
	WSDATA   nPRTLOGOUTRESULT          AS integer
	WSDATA   cUSEROLDPASSWORD          AS string
	WSDATA   nPRTPSWUSERRESULT         AS integer
	WSDATA   oWSUSERPCODE              AS USERPORTAL_LOGINUSERSTRUCT
	WSDATA   nPRTPUTUSERRESULT         AS integer

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSLOGINUSERSTRUCT        AS USERPORTAL_LOGINUSERSTRUCT

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSUSERPORTAL
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.191205P-20201009] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSUSERPORTAL
	::oWSPRTAMBIENTERESULT := USERPORTAL_SAMBIENTE():New()
	::oWSPRTGETCLIENTSBYUSERRESULT := USERPORTAL_ARRAYOFSTRING():New()
	::oWSPRTGETGROUPRESULT := USERPORTAL_ARRAYOFLOGINUSERSTRUCT():New()
	::oWSPRTHEADERRESULT := USERPORTAL_ARRAYOFBRWHEADER():New()
	::oWSPRTLISTMENURESULT := USERPORTAL_ARRAYOFLOGINMENU():New()
	::oWSPRTLISTPORTALSRESULT := USERPORTAL_ARRAYOFGENERICSTRUCT():New()
	::oWSPRTLOGINRESULT  := USERPORTAL_LOGINUSERSTRUCT():New()
	::oWSUSERPCODE       := USERPORTAL_LOGINUSERSTRUCT():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSLOGINUSERSTRUCT := ::oWSUSERPCODE
Return

WSMETHOD RESET WSCLIENT WSUSERPORTAL
	::oWSPRTAMBIENTERESULT := NIL 
	::cUSERCODE          := NIL 
	::oWSPRTGETCLIENTSBYUSERRESULT := NIL 
	::oWSPRTGETGROUPRESULT := NIL 
	::cHEADERTYPE        := NIL 
	::oWSPRTHEADERRESULT := NIL 
	::cUSERPORTALCODE    := NIL 
	::cUSERLOGIN         := NIL 
	::oWSPRTLISTMENURESULT := NIL 
	::oWSPRTLISTPORTALSRESULT := NIL 
	::cUSERPASSWORD      := NIL 
	::cUSERTYPE          := NIL 
	::cPORTALACCESS      := NIL 
	::cUSERIPADDR        := NIL 
	::oWSPRTLOGINRESULT  := NIL 
	::nPRTLOGOUTRESULT   := NIL 
	::cUSEROLDPASSWORD   := NIL 
	::nPRTPSWUSERRESULT  := NIL 
	::oWSUSERPCODE       := NIL 
	::nPRTPUTUSERRESULT  := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSLOGINUSERSTRUCT := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSUSERPORTAL
Local oClone := WSUSERPORTAL():New()
	oClone:_URL          := ::_URL 
	oClone:oWSPRTAMBIENTERESULT :=  IIF(::oWSPRTAMBIENTERESULT = NIL , NIL ,::oWSPRTAMBIENTERESULT:Clone() )
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:oWSPRTGETCLIENTSBYUSERRESULT :=  IIF(::oWSPRTGETCLIENTSBYUSERRESULT = NIL , NIL ,::oWSPRTGETCLIENTSBYUSERRESULT:Clone() )
	oClone:oWSPRTGETGROUPRESULT :=  IIF(::oWSPRTGETGROUPRESULT = NIL , NIL ,::oWSPRTGETGROUPRESULT:Clone() )
	oClone:cHEADERTYPE   := ::cHEADERTYPE
	oClone:oWSPRTHEADERRESULT :=  IIF(::oWSPRTHEADERRESULT = NIL , NIL ,::oWSPRTHEADERRESULT:Clone() )
	oClone:cUSERPORTALCODE := ::cUSERPORTALCODE
	oClone:cUSERLOGIN    := ::cUSERLOGIN
	oClone:oWSPRTLISTMENURESULT :=  IIF(::oWSPRTLISTMENURESULT = NIL , NIL ,::oWSPRTLISTMENURESULT:Clone() )
	oClone:oWSPRTLISTPORTALSRESULT :=  IIF(::oWSPRTLISTPORTALSRESULT = NIL , NIL ,::oWSPRTLISTPORTALSRESULT:Clone() )
	oClone:cUSERPASSWORD := ::cUSERPASSWORD
	oClone:cUSERTYPE     := ::cUSERTYPE
	oClone:cPORTALACCESS := ::cPORTALACCESS
	oClone:cUSERIPADDR   := ::cUSERIPADDR								  
	oClone:oWSPRTLOGINRESULT :=  IIF(::oWSPRTLOGINRESULT = NIL , NIL ,::oWSPRTLOGINRESULT:Clone() )
	oClone:nPRTLOGOUTRESULT := ::nPRTLOGOUTRESULT
	oClone:cUSEROLDPASSWORD := ::cUSEROLDPASSWORD
	oClone:nPRTPSWUSERRESULT := ::nPRTPSWUSERRESULT
	oClone:oWSUSERPCODE  :=  IIF(::oWSUSERPCODE = NIL , NIL ,::oWSUSERPCODE:Clone() )
	oClone:nPRTPUTUSERRESULT := ::nPRTPUTUSERRESULT

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSLOGINUSERSTRUCT := oClone:oWSUSERPCODE
Return oClone

// WSDL Method PRTAMBIENTE of Service WSUSERPORTAL

WSMETHOD PRTAMBIENTE WSSEND NULLPARAM WSRECEIVE oWSPRTAMBIENTERESULT WSCLIENT WSUSERPORTAL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PRTAMBIENTE xmlns="http://webservices.microsiga.com.br/userportal.apw">'
cSoap += "</PRTAMBIENTE>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/userportal.apw/PRTAMBIENTE",; 
	"DOCUMENT","http://webservices.microsiga.com.br/userportal.apw",,"1.031217",; 
	"http://localhost:8059/ws/USERPORTAL.apw")

::Init()
::oWSPRTAMBIENTERESULT:SoapRecv( WSAdvValue( oXmlRet,"_PRTAMBIENTERESPONSE:_PRTAMBIENTERESULT","SAMBIENTE",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PRTGETCLIENTSBYUSER of Service WSUSERPORTAL

WSMETHOD PRTGETCLIENTSBYUSER WSSEND cUSERCODE WSRECEIVE oWSPRTGETCLIENTSBYUSERRESULT WSCLIENT WSUSERPORTAL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PRTGETCLIENTSBYUSER xmlns="http://webservices.microsiga.com.br/userportal.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PRTGETCLIENTSBYUSER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/userportal.apw/PRTGETCLIENTSBYUSER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/userportal.apw",,"1.031217",; 
	"http://localhost:8059/ws/USERPORTAL.apw")

::Init()
::oWSPRTGETCLIENTSBYUSERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_PRTGETCLIENTSBYUSERRESPONSE:_PRTGETCLIENTSBYUSERRESULT","ARRAYOFSTRING",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PRTGETGROUP of Service WSUSERPORTAL

WSMETHOD PRTGETGROUP WSSEND cUSERCODE WSRECEIVE oWSPRTGETGROUPRESULT WSCLIENT WSUSERPORTAL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PRTGETGROUP xmlns="http://webservices.microsiga.com.br/userportal.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PRTGETGROUP>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/userportal.apw/PRTGETGROUP",; 
	"DOCUMENT","http://webservices.microsiga.com.br/userportal.apw",,"1.031217",; 
	"http://localhost:8059/ws/USERPORTAL.apw")

::Init()
::oWSPRTGETGROUPRESULT:SoapRecv( WSAdvValue( oXmlRet,"_PRTGETGROUPRESPONSE:_PRTGETGROUPRESULT","ARRAYOFLOGINUSERSTRUCT",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PRTHEADER of Service WSUSERPORTAL

WSMETHOD PRTHEADER WSSEND cHEADERTYPE WSRECEIVE oWSPRTHEADERRESULT WSCLIENT WSUSERPORTAL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PRTHEADER xmlns="http://webservices.microsiga.com.br/userportal.apw">'
cSoap += WSSoapValue("HEADERTYPE", ::cHEADERTYPE, cHEADERTYPE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PRTHEADER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/userportal.apw/PRTHEADER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/userportal.apw",,"1.031217",; 
	"http://localhost:8059/ws/USERPORTAL.apw")

::Init()
::oWSPRTHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_PRTHEADERRESPONSE:_PRTHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PRTLISTMENU of Service WSUSERPORTAL

WSMETHOD PRTLISTMENU WSSEND cUSERPORTALCODE,cUSERCODE,cUSERLOGIN WSRECEIVE oWSPRTLISTMENURESULT WSCLIENT WSUSERPORTAL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PRTLISTMENU xmlns="http://webservices.microsiga.com.br/userportal.apw">'
cSoap += WSSoapValue("USERPORTALCODE", ::cUSERPORTALCODE, cUSERPORTALCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("USERLOGIN", ::cUSERLOGIN, cUSERLOGIN , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PRTLISTMENU>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/userportal.apw/PRTLISTMENU",; 
	"DOCUMENT","http://webservices.microsiga.com.br/userportal.apw",,"1.031217",; 
	"http://localhost:8059/ws/USERPORTAL.apw")

::Init()
::oWSPRTLISTMENURESULT:SoapRecv( WSAdvValue( oXmlRet,"_PRTLISTMENURESPONSE:_PRTLISTMENURESULT","ARRAYOFLOGINMENU",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PRTLISTPORTALS of Service WSUSERPORTAL

WSMETHOD PRTLISTPORTALS WSSEND NULLPARAM WSRECEIVE oWSPRTLISTPORTALSRESULT WSCLIENT WSUSERPORTAL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PRTLISTPORTALS xmlns="http://webservices.microsiga.com.br/userportal.apw">'
cSoap += "</PRTLISTPORTALS>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/userportal.apw/PRTLISTPORTALS",; 
	"DOCUMENT","http://webservices.microsiga.com.br/userportal.apw",,"1.031217",; 
	"http://localhost:8059/ws/USERPORTAL.apw")

::Init()
::oWSPRTLISTPORTALSRESULT:SoapRecv( WSAdvValue( oXmlRet,"_PRTLISTPORTALSRESPONSE:_PRTLISTPORTALSRESULT","ARRAYOFGENERICSTRUCT",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PRTLOGIN of Service WSUSERPORTAL

WSMETHOD PRTLOGIN WSSEND cUSERLOGIN,cUSERPASSWORD,cUSERTYPE,cPORTALACCESS,cUSERIPADDR WSRECEIVE oWSPRTLOGINRESULT WSCLIENT WSUSERPORTAL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PRTLOGIN xmlns="http://webservices.microsiga.com.br/userportal.apw">'
cSoap += WSSoapValue("USERLOGIN", ::cUSERLOGIN, cUSERLOGIN , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("USERPASSWORD", ::cUSERPASSWORD, cUSERPASSWORD , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("USERTYPE", ::cUSERTYPE, cUSERTYPE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PORTALACCESS", ::cPORTALACCESS, cPORTALACCESS , "string", .F. , .F., 0 , NIL, .F.,.F.)
cSoap += WSSoapValue("USERIPADDR", ::cUSERIPADDR, cUSERIPADDR , "string", .F. , .F., 0 , NIL, .F.,.F.)																									   
cSoap += "</PRTLOGIN>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/userportal.apw/PRTLOGIN",; 
	"DOCUMENT","http://webservices.microsiga.com.br/userportal.apw",,"1.031217",; 
	"http://localhost:8059/ws/USERPORTAL.apw")

::Init()
::oWSPRTLOGINRESULT:SoapRecv( WSAdvValue( oXmlRet,"_PRTLOGINRESPONSE:_PRTLOGINRESULT","LOGINUSERSTRUCT",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PRTLOGOUT of Service WSUSERPORTAL

WSMETHOD PRTLOGOUT WSSEND cUSERCODE WSRECEIVE nPRTLOGOUTRESULT WSCLIENT WSUSERPORTAL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PRTLOGOUT xmlns="http://webservices.microsiga.com.br/userportal.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PRTLOGOUT>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/userportal.apw/PRTLOGOUT",; 
	"DOCUMENT","http://webservices.microsiga.com.br/userportal.apw",,"1.031217",; 
	"http://localhost:8059/ws/USERPORTAL.apw")

::Init()
::nPRTLOGOUTRESULT   :=  WSAdvValue( oXmlRet,"_PRTLOGOUTRESPONSE:_PRTLOGOUTRESULT:TEXT","integer",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PRTPSWUSER of Service WSUSERPORTAL

WSMETHOD PRTPSWUSER WSSEND cUSERCODE,cUSEROLDPASSWORD,cUSERPASSWORD,cUSERTYPE WSRECEIVE nPRTPSWUSERRESULT WSCLIENT WSUSERPORTAL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PRTPSWUSER xmlns="http://webservices.microsiga.com.br/userportal.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("USEROLDPASSWORD", ::cUSEROLDPASSWORD, cUSEROLDPASSWORD , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("USERPASSWORD", ::cUSERPASSWORD, cUSERPASSWORD , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("USERTYPE", ::cUSERTYPE, cUSERTYPE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PRTPSWUSER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/userportal.apw/PRTPSWUSER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/userportal.apw",,"1.031217",; 
	"http://localhost:8059/ws/USERPORTAL.apw")

::Init()
::nPRTPSWUSERRESULT  :=  WSAdvValue( oXmlRet,"_PRTPSWUSERRESPONSE:_PRTPSWUSERRESULT:TEXT","integer",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PRTPUTUSER of Service WSUSERPORTAL

WSMETHOD PRTPUTUSER WSSEND cUSERCODE,oWSUSERPCODE WSRECEIVE nPRTPUTUSERRESULT WSCLIENT WSUSERPORTAL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PRTPUTUSER xmlns="http://webservices.microsiga.com.br/userportal.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("USERPCODE", ::oWSUSERPCODE, oWSUSERPCODE , "LOGINUSERSTRUCT", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PRTPUTUSER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/userportal.apw/PRTPUTUSER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/userportal.apw",,"1.031217",; 
	"http://localhost:8059/ws/USERPORTAL.apw")

::Init()
::nPRTPUTUSERRESULT  :=  WSAdvValue( oXmlRet,"_PRTPUTUSERRESPONSE:_PRTPUTUSERRESULT:TEXT","integer",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure SAMBIENTE

WSSTRUCT USERPORTAL_SAMBIENTE
	WSDATA   cRPORELEASE               AS string
	WSDATA   cVERSAO                   AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_SAMBIENTE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_SAMBIENTE
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_SAMBIENTE
	Local oClone := USERPORTAL_SAMBIENTE():NEW()
	oClone:cRPORELEASE          := ::cRPORELEASE
	oClone:cVERSAO              := ::cVERSAO
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_SAMBIENTE
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cRPORELEASE        :=  WSAdvValue( oResponse,"_RPORELEASE","string",NIL,"Property cRPORELEASE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cVERSAO            :=  WSAdvValue( oResponse,"_VERSAO","string",NIL,"Property cVERSAO as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFLOGINUSERSTRUCT

WSSTRUCT USERPORTAL_ARRAYOFLOGINUSERSTRUCT
	WSDATA   oWSLOGINUSERSTRUCT        AS USERPORTAL_LOGINUSERSTRUCT OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFLOGINUSERSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFLOGINUSERSTRUCT
	::oWSLOGINUSERSTRUCT   := {} // Array Of  USERPORTAL_LOGINUSERSTRUCT():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFLOGINUSERSTRUCT
	Local oClone := USERPORTAL_ARRAYOFLOGINUSERSTRUCT():NEW()
	oClone:oWSLOGINUSERSTRUCT := NIL
	If ::oWSLOGINUSERSTRUCT <> NIL 
		oClone:oWSLOGINUSERSTRUCT := {}
		aEval( ::oWSLOGINUSERSTRUCT , { |x| aadd( oClone:oWSLOGINUSERSTRUCT , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFLOGINUSERSTRUCT
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_LOGINUSERSTRUCT","LOGINUSERSTRUCT",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSLOGINUSERSTRUCT , USERPORTAL_LOGINUSERSTRUCT():New() )
			::oWSLOGINUSERSTRUCT[len(::oWSLOGINUSERSTRUCT)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFBRWHEADER

WSSTRUCT USERPORTAL_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS USERPORTAL_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  USERPORTAL_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFBRWHEADER
	Local oClone := USERPORTAL_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , USERPORTAL_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFLOGINMENU

WSSTRUCT USERPORTAL_ARRAYOFLOGINMENU
	WSDATA   oWSLOGINMENU              AS USERPORTAL_LOGINMENU OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFLOGINMENU
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFLOGINMENU
	::oWSLOGINMENU         := {} // Array Of  USERPORTAL_LOGINMENU():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFLOGINMENU
	Local oClone := USERPORTAL_ARRAYOFLOGINMENU():NEW()
	oClone:oWSLOGINMENU := NIL
	If ::oWSLOGINMENU <> NIL 
		oClone:oWSLOGINMENU := {}
		aEval( ::oWSLOGINMENU , { |x| aadd( oClone:oWSLOGINMENU , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFLOGINMENU
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_LOGINMENU","LOGINMENU",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSLOGINMENU , USERPORTAL_LOGINMENU():New() )
			::oWSLOGINMENU[len(::oWSLOGINMENU)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFGENERICSTRUCT

WSSTRUCT USERPORTAL_ARRAYOFGENERICSTRUCT
	WSDATA   oWSGENERICSTRUCT          AS USERPORTAL_GENERICSTRUCT OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFGENERICSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFGENERICSTRUCT
	::oWSGENERICSTRUCT     := {} // Array Of  USERPORTAL_GENERICSTRUCT():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFGENERICSTRUCT
	Local oClone := USERPORTAL_ARRAYOFGENERICSTRUCT():NEW()
	oClone:oWSGENERICSTRUCT := NIL
	If ::oWSGENERICSTRUCT <> NIL 
		oClone:oWSGENERICSTRUCT := {}
		aEval( ::oWSGENERICSTRUCT , { |x| aadd( oClone:oWSGENERICSTRUCT , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFGENERICSTRUCT
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_GENERICSTRUCT","GENERICSTRUCT",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSGENERICSTRUCT , USERPORTAL_GENERICSTRUCT():New() )
			::oWSGENERICSTRUCT[len(::oWSGENERICSTRUCT)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure LOGINUSERSTRUCT

WSSTRUCT USERPORTAL_LOGINUSERSTRUCT
	WSDATA   oWSUSERACCESSES           AS USERPORTAL_ARRAYOFLOGINACCESSESSTRUCT OPTIONAL
	WSDATA   oWSUSERACCESSESHEADER     AS USERPORTAL_ARRAYOFSTRING OPTIONAL
	WSDATA   cUSERCODE                 AS string OPTIONAL
	WSDATA   cUSEREMAIL                AS string OPTIONAL
	WSDATA   oWSUSERENTIRIES           AS USERPORTAL_ARRAYOFLOGINENTIRYSTRUCT OPTIONAL
	WSDATA   oWSUSERENTIRIESHEADER     AS USERPORTAL_ARRAYOFSTRING OPTIONAL
	WSDATA   cUSERGROUP                AS string OPTIONAL
	WSDATA   cUSERLOGIN                AS string
	WSDATA   oWSUSERLOGPLS             AS USERPORTAL_LOGINVIEW OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   cUSERPASSWORD             AS string
	WSDATA   nUSERROLES                AS integer
	WSDATA   cUSERSKIN                 AS string OPTIONAL
	WSDATA   cUSERSUPER                AS string OPTIONAL
	WSDATA   cUSERWS                   AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_LOGINUSERSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_LOGINUSERSTRUCT
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_LOGINUSERSTRUCT
	Local oClone := USERPORTAL_LOGINUSERSTRUCT():NEW()
	oClone:oWSUSERACCESSES      := IIF(::oWSUSERACCESSES = NIL , NIL , ::oWSUSERACCESSES:Clone() )
	oClone:oWSUSERACCESSESHEADER := IIF(::oWSUSERACCESSESHEADER = NIL , NIL , ::oWSUSERACCESSESHEADER:Clone() )
	oClone:cUSERCODE            := ::cUSERCODE
	oClone:cUSEREMAIL           := ::cUSEREMAIL
	oClone:oWSUSERENTIRIES      := IIF(::oWSUSERENTIRIES = NIL , NIL , ::oWSUSERENTIRIES:Clone() )
	oClone:oWSUSERENTIRIESHEADER := IIF(::oWSUSERENTIRIESHEADER = NIL , NIL , ::oWSUSERENTIRIESHEADER:Clone() )
	oClone:cUSERGROUP           := ::cUSERGROUP
	oClone:cUSERLOGIN           := ::cUSERLOGIN
	oClone:oWSUSERLOGPLS        := IIF(::oWSUSERLOGPLS = NIL , NIL , ::oWSUSERLOGPLS:Clone() )
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:cUSERPASSWORD        := ::cUSERPASSWORD
	oClone:nUSERROLES           := ::nUSERROLES
	oClone:cUSERSKIN            := ::cUSERSKIN
	oClone:cUSERSUPER           := ::cUSERSUPER
	oClone:cUSERWS              := ::cUSERWS
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_LOGINUSERSTRUCT
	Local cSoap := ""
	cSoap += WSSoapValue("USERACCESSES", ::oWSUSERACCESSES, ::oWSUSERACCESSES , "ARRAYOFLOGINACCESSESSTRUCT", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERACCESSESHEADER", ::oWSUSERACCESSESHEADER, ::oWSUSERACCESSESHEADER , "ARRAYOFSTRING", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERCODE", ::cUSERCODE, ::cUSERCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USEREMAIL", ::cUSEREMAIL, ::cUSEREMAIL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERENTIRIES", ::oWSUSERENTIRIES, ::oWSUSERENTIRIES , "ARRAYOFLOGINENTIRYSTRUCT", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERENTIRIESHEADER", ::oWSUSERENTIRIESHEADER, ::oWSUSERENTIRIESHEADER , "ARRAYOFSTRING", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERGROUP", ::cUSERGROUP, ::cUSERGROUP , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERLOGIN", ::cUSERLOGIN, ::cUSERLOGIN , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERLOGPLS", ::oWSUSERLOGPLS, ::oWSUSERLOGPLS , "LOGINVIEW", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERNAME", ::cUSERNAME, ::cUSERNAME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERPASSWORD", ::cUSERPASSWORD, ::cUSERPASSWORD , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERROLES", ::nUSERROLES, ::nUSERROLES , "integer", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERSKIN", ::cUSERSKIN, ::cUSERSKIN , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERSUPER", ::cUSERSUPER, ::cUSERSUPER , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERWS", ::cUSERWS, ::cUSERWS , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_LOGINUSERSTRUCT
	Local oNode1
	Local oNode2
	Local oNode5
	Local oNode6
	Local oNode9
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_USERACCESSES","ARRAYOFLOGINACCESSESSTRUCT",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSUSERACCESSES := USERPORTAL_ARRAYOFLOGINACCESSESSTRUCT():New()
		::oWSUSERACCESSES:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_USERACCESSESHEADER","ARRAYOFSTRING",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSUSERACCESSESHEADER := USERPORTAL_ARRAYOFSTRING():New()
		::oWSUSERACCESSESHEADER:SoapRecv(oNode2)
	EndIf
	::cUSERCODE          :=  WSAdvValue( oResponse,"_USERCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSEREMAIL         :=  WSAdvValue( oResponse,"_USEREMAIL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode5 :=  WSAdvValue( oResponse,"_USERENTIRIES","ARRAYOFLOGINENTIRYSTRUCT",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode5 != NIL
		::oWSUSERENTIRIES := USERPORTAL_ARRAYOFLOGINENTIRYSTRUCT():New()
		::oWSUSERENTIRIES:SoapRecv(oNode5)
	EndIf
	oNode6 :=  WSAdvValue( oResponse,"_USERENTIRIESHEADER","ARRAYOFSTRING",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode6 != NIL
		::oWSUSERENTIRIESHEADER := USERPORTAL_ARRAYOFSTRING():New()
		::oWSUSERENTIRIESHEADER:SoapRecv(oNode6)
	EndIf
	::cUSERGROUP         :=  WSAdvValue( oResponse,"_USERGROUP","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERLOGIN         :=  WSAdvValue( oResponse,"_USERLOGIN","string",NIL,"Property cUSERLOGIN as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode9 :=  WSAdvValue( oResponse,"_USERLOGPLS","LOGINVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode9 != NIL
		::oWSUSERLOGPLS := USERPORTAL_LOGINVIEW():New()
		::oWSUSERLOGPLS:SoapRecv(oNode9)
	EndIf
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERPASSWORD      :=  WSAdvValue( oResponse,"_USERPASSWORD","string",NIL,"Property cUSERPASSWORD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nUSERROLES         :=  WSAdvValue( oResponse,"_USERROLES","integer",NIL,"Property nUSERROLES as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cUSERSKIN          :=  WSAdvValue( oResponse,"_USERSKIN","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERSUPER         :=  WSAdvValue( oResponse,"_USERSUPER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERWS            :=  WSAdvValue( oResponse,"_USERWS","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure BRWHEADER

WSSTRUCT USERPORTAL_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_BRWHEADER
	Local oClone := USERPORTAL_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure LOGINMENU

WSSTRUCT USERPORTAL_LOGINMENU
	WSDATA   nAPVLINITLEVEL            AS integer OPTIONAL
	WSDATA   nAPVLLEVELS               AS integer OPTIONAL
	WSDATA   cAPVLVISION               AS string OPTIONAL
	WSDATA   cCODE                     AS string
	WSDATA   cDESCRIPTION              AS string
	WSDATA   lMENUISBLOCKED            AS boolean OPTIONAL
	WSDATA   nORDER                    AS integer
	WSDATA   cPROCEDURECALL            AS string
	WSDATA   cSUPERIORCODE             AS string
	WSDATA   cWEBSERVICE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_LOGINMENU
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_LOGINMENU
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_LOGINMENU
	Local oClone := USERPORTAL_LOGINMENU():NEW()
	oClone:nAPVLINITLEVEL       := ::nAPVLINITLEVEL
	oClone:nAPVLLEVELS          := ::nAPVLLEVELS
	oClone:cAPVLVISION          := ::cAPVLVISION
	oClone:cCODE                := ::cCODE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:lMENUISBLOCKED       := ::lMENUISBLOCKED
	oClone:nORDER               := ::nORDER
	oClone:cPROCEDURECALL       := ::cPROCEDURECALL
	oClone:cSUPERIORCODE        := ::cSUPERIORCODE
	oClone:cWEBSERVICE          := ::cWEBSERVICE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_LOGINMENU
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nAPVLINITLEVEL     :=  WSAdvValue( oResponse,"_APVLINITLEVEL","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::nAPVLLEVELS        :=  WSAdvValue( oResponse,"_APVLLEVELS","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cAPVLVISION        :=  WSAdvValue( oResponse,"_APVLVISION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,"Property cCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,"Property cDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lMENUISBLOCKED     :=  WSAdvValue( oResponse,"_MENUISBLOCKED","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::nORDER             :=  WSAdvValue( oResponse,"_ORDER","integer",NIL,"Property nORDER as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cPROCEDURECALL     :=  WSAdvValue( oResponse,"_PROCEDURECALL","string",NIL,"Property cPROCEDURECALL as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSUPERIORCODE      :=  WSAdvValue( oResponse,"_SUPERIORCODE","string",NIL,"Property cSUPERIORCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cWEBSERVICE        :=  WSAdvValue( oResponse,"_WEBSERVICE","string",NIL,"Property cWEBSERVICE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure GENERICSTRUCT

WSSTRUCT USERPORTAL_GENERICSTRUCT
	WSDATA   cCODE                     AS string
	WSDATA   cDESCRIPTION              AS string
	WSDATA   nVALUE                    AS float OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_GENERICSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_GENERICSTRUCT
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_GENERICSTRUCT
	Local oClone := USERPORTAL_GENERICSTRUCT():NEW()
	oClone:cCODE                := ::cCODE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:nVALUE               := ::nVALUE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_GENERICSTRUCT
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,"Property cCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,"Property cDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nVALUE             :=  WSAdvValue( oResponse,"_VALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFLOGINACCESSESSTRUCT

WSSTRUCT USERPORTAL_ARRAYOFLOGINACCESSESSTRUCT
	WSDATA   oWSLOGINACCESSESSTRUCT    AS USERPORTAL_LOGINACCESSESSTRUCT OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFLOGINACCESSESSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFLOGINACCESSESSTRUCT
	::oWSLOGINACCESSESSTRUCT := {} // Array Of  USERPORTAL_LOGINACCESSESSTRUCT():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFLOGINACCESSESSTRUCT
	Local oClone := USERPORTAL_ARRAYOFLOGINACCESSESSTRUCT():NEW()
	oClone:oWSLOGINACCESSESSTRUCT := NIL
	If ::oWSLOGINACCESSESSTRUCT <> NIL 
		oClone:oWSLOGINACCESSESSTRUCT := {}
		aEval( ::oWSLOGINACCESSESSTRUCT , { |x| aadd( oClone:oWSLOGINACCESSESSTRUCT , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_ARRAYOFLOGINACCESSESSTRUCT
	Local cSoap := ""
	aEval( ::oWSLOGINACCESSESSTRUCT , {|x| cSoap := cSoap  +  WSSoapValue("LOGINACCESSESSTRUCT", x , x , "LOGINACCESSESSTRUCT", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFLOGINACCESSESSTRUCT
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_LOGINACCESSESSTRUCT","LOGINACCESSESSTRUCT",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSLOGINACCESSESSTRUCT , USERPORTAL_LOGINACCESSESSTRUCT():New() )
			::oWSLOGINACCESSESSTRUCT[len(::oWSLOGINACCESSESSTRUCT)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFSTRING

WSSTRUCT USERPORTAL_ARRAYOFSTRING
	WSDATA   cSTRING                   AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFSTRING
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFSTRING
	::cSTRING              := {} // Array Of  ""
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFSTRING
	Local oClone := USERPORTAL_ARRAYOFSTRING():NEW()
	oClone:cSTRING              := IIf(::cSTRING <> NIL , aClone(::cSTRING) , NIL )
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_ARRAYOFSTRING
	Local cSoap := ""
	aEval( ::cSTRING , {|x| cSoap := cSoap  +  WSSoapValue("STRING", x , x , "string", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFSTRING
	Local oNodes1 :=  WSAdvValue( oResponse,"_STRING","string",{},NIL,.T.,"S",NIL,"a") 
	::Init()
	If oResponse = NIL ; Return ; Endif 
	aEval(oNodes1 , { |x| aadd(::cSTRING ,  x:TEXT  ) } )
Return

// WSDL Data Structure ARRAYOFLOGINENTIRYSTRUCT

WSSTRUCT USERPORTAL_ARRAYOFLOGINENTIRYSTRUCT
	WSDATA   oWSLOGINENTIRYSTRUCT      AS USERPORTAL_LOGINENTIRYSTRUCT OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFLOGINENTIRYSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFLOGINENTIRYSTRUCT
	::oWSLOGINENTIRYSTRUCT := {} // Array Of  USERPORTAL_LOGINENTIRYSTRUCT():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFLOGINENTIRYSTRUCT
	Local oClone := USERPORTAL_ARRAYOFLOGINENTIRYSTRUCT():NEW()
	oClone:oWSLOGINENTIRYSTRUCT := NIL
	If ::oWSLOGINENTIRYSTRUCT <> NIL 
		oClone:oWSLOGINENTIRYSTRUCT := {}
		aEval( ::oWSLOGINENTIRYSTRUCT , { |x| aadd( oClone:oWSLOGINENTIRYSTRUCT , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_ARRAYOFLOGINENTIRYSTRUCT
	Local cSoap := ""
	aEval( ::oWSLOGINENTIRYSTRUCT , {|x| cSoap := cSoap  +  WSSoapValue("LOGINENTIRYSTRUCT", x , x , "LOGINENTIRYSTRUCT", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFLOGINENTIRYSTRUCT
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_LOGINENTIRYSTRUCT","LOGINENTIRYSTRUCT",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSLOGINENTIRYSTRUCT , USERPORTAL_LOGINENTIRYSTRUCT():New() )
			::oWSLOGINENTIRYSTRUCT[len(::oWSLOGINENTIRYSTRUCT)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure LOGINVIEW

WSSTRUCT USERPORTAL_LOGINVIEW
	WSDATA   cBIOMETRIA                AS string OPTIONAL
	WSDATA   cBIOMETRIACAD             AS string OPTIONAL
	WSDATA   dDATASERVER               AS date OPTIONAL
	WSDATA   nINTDAT                   AS integer OPTIONAL
	WSDATA   oWSLISTOFACS              AS USERPORTAL_ARRAYOFSATALHOS OPTIONAL
	WSDATA   oWSLISTOFOPE              AS USERPORTAL_ARRAYOFSOPERADORA OPTIONAL
	WSDATA   oWSLISTOFRDA              AS USERPORTAL_ARRAYOFRDAVIEW OPTIONAL
	WSDATA   cMODBIO                   AS string OPTIONAL
	WSDATA   cTIPCAR                   AS string OPTIONAL
	WSDATA   nTPPORTAL                 AS integer
	WSDATA   cUSEREMAIL                AS string OPTIONAL
	WSDATA   cUSERLOGINCODE            AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_LOGINVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_LOGINVIEW
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_LOGINVIEW
	Local oClone := USERPORTAL_LOGINVIEW():NEW()
	oClone:cBIOMETRIA           := ::cBIOMETRIA
	oClone:cBIOMETRIACAD        := ::cBIOMETRIACAD
	oClone:dDATASERVER          := ::dDATASERVER
	oClone:nINTDAT              := ::nINTDAT
	oClone:oWSLISTOFACS         := IIF(::oWSLISTOFACS = NIL , NIL , ::oWSLISTOFACS:Clone() )
	oClone:oWSLISTOFOPE         := IIF(::oWSLISTOFOPE = NIL , NIL , ::oWSLISTOFOPE:Clone() )
	oClone:oWSLISTOFRDA         := IIF(::oWSLISTOFRDA = NIL , NIL , ::oWSLISTOFRDA:Clone() )
	oClone:cMODBIO              := ::cMODBIO
	oClone:cTIPCAR              := ::cTIPCAR
	oClone:nTPPORTAL            := ::nTPPORTAL
	oClone:cUSEREMAIL           := ::cUSEREMAIL
	oClone:cUSERLOGINCODE       := ::cUSERLOGINCODE
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_LOGINVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("BIOMETRIA", ::cBIOMETRIA, ::cBIOMETRIA , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("BIOMETRIACAD", ::cBIOMETRIACAD, ::cBIOMETRIACAD , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DATASERVER", ::dDATASERVER, ::dDATASERVER , "date", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("INTDAT", ::nINTDAT, ::nINTDAT , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("LISTOFACS", ::oWSLISTOFACS, ::oWSLISTOFACS , "ARRAYOFSATALHOS", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("LISTOFOPE", ::oWSLISTOFOPE, ::oWSLISTOFOPE , "ARRAYOFSOPERADORA", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("LISTOFRDA", ::oWSLISTOFRDA, ::oWSLISTOFRDA , "ARRAYOFRDAVIEW", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("MODBIO", ::cMODBIO, ::cMODBIO , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TIPCAR", ::cTIPCAR, ::cTIPCAR , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TPPORTAL", ::nTPPORTAL, ::nTPPORTAL , "integer", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USEREMAIL", ::cUSEREMAIL, ::cUSEREMAIL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERLOGINCODE", ::cUSERLOGINCODE, ::cUSERLOGINCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_LOGINVIEW
	Local oNode5
	Local oNode6
	Local oNode7
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cBIOMETRIA         :=  WSAdvValue( oResponse,"_BIOMETRIA","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cBIOMETRIACAD      :=  WSAdvValue( oResponse,"_BIOMETRIACAD","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dDATASERVER        :=  WSAdvValue( oResponse,"_DATASERVER","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::nINTDAT            :=  WSAdvValue( oResponse,"_INTDAT","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	oNode5 :=  WSAdvValue( oResponse,"_LISTOFACS","ARRAYOFSATALHOS",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode5 != NIL
		::oWSLISTOFACS := USERPORTAL_ARRAYOFSATALHOS():New()
		::oWSLISTOFACS:SoapRecv(oNode5)
	EndIf
	oNode6 :=  WSAdvValue( oResponse,"_LISTOFOPE","ARRAYOFSOPERADORA",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode6 != NIL
		::oWSLISTOFOPE := USERPORTAL_ARRAYOFSOPERADORA():New()
		::oWSLISTOFOPE:SoapRecv(oNode6)
	EndIf
	oNode7 :=  WSAdvValue( oResponse,"_LISTOFRDA","ARRAYOFRDAVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode7 != NIL
		::oWSLISTOFRDA := USERPORTAL_ARRAYOFRDAVIEW():New()
		::oWSLISTOFRDA:SoapRecv(oNode7)
	EndIf
	::cMODBIO            :=  WSAdvValue( oResponse,"_MODBIO","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTIPCAR            :=  WSAdvValue( oResponse,"_TIPCAR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nTPPORTAL          :=  WSAdvValue( oResponse,"_TPPORTAL","integer",NIL,"Property nTPPORTAL as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cUSEREMAIL         :=  WSAdvValue( oResponse,"_USEREMAIL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERLOGINCODE     :=  WSAdvValue( oResponse,"_USERLOGINCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure LOGINACCESSESSTRUCT

WSSTRUCT USERPORTAL_LOGINACCESSESSTRUCT
	WSDATA   cNAME                     AS string
	WSDATA   cWEBSRV                   AS string
	WSDATA   cWKFAPV                   AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_LOGINACCESSESSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_LOGINACCESSESSTRUCT
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_LOGINACCESSESSTRUCT
	Local oClone := USERPORTAL_LOGINACCESSESSTRUCT():NEW()
	oClone:cNAME                := ::cNAME
	oClone:cWEBSRV              := ::cWEBSRV
	oClone:cWKFAPV              := ::cWKFAPV
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_LOGINACCESSESSTRUCT
	Local cSoap := ""
	cSoap += WSSoapValue("NAME", ::cNAME, ::cNAME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("WEBSRV", ::cWEBSRV, ::cWEBSRV , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("WKFAPV", ::cWKFAPV, ::cWKFAPV , "string", .T. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_LOGINACCESSESSTRUCT
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cNAME              :=  WSAdvValue( oResponse,"_NAME","string",NIL,"Property cNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cWEBSRV            :=  WSAdvValue( oResponse,"_WEBSRV","string",NIL,"Property cWEBSRV as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cWKFAPV            :=  WSAdvValue( oResponse,"_WKFAPV","string",NIL,"Property cWKFAPV as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure LOGINENTIRYSTRUCT

WSSTRUCT USERPORTAL_LOGINENTIRYSTRUCT
	WSDATA   cENTIRY                   AS string
	WSDATA   cFEDERALID                AS string OPTIONAL
	WSDATA   cID_ENTIRY                AS string
	WSDATA   cNAME                     AS string OPTIONAL
	WSDATA   cNICKNAME                 AS string OPTIONAL
	WSDATA   cSKIN                     AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_LOGINENTIRYSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_LOGINENTIRYSTRUCT
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_LOGINENTIRYSTRUCT
	Local oClone := USERPORTAL_LOGINENTIRYSTRUCT():NEW()
	oClone:cENTIRY              := ::cENTIRY
	oClone:cFEDERALID           := ::cFEDERALID
	oClone:cID_ENTIRY           := ::cID_ENTIRY
	oClone:cNAME                := ::cNAME
	oClone:cNICKNAME            := ::cNICKNAME
	oClone:cSKIN                := ::cSKIN
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_LOGINENTIRYSTRUCT
	Local cSoap := ""
	cSoap += WSSoapValue("ENTIRY", ::cENTIRY, ::cENTIRY , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("FEDERALID", ::cFEDERALID, ::cFEDERALID , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("ID_ENTIRY", ::cID_ENTIRY, ::cID_ENTIRY , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NAME", ::cNAME, ::cNAME , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NICKNAME", ::cNICKNAME, ::cNICKNAME , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SKIN", ::cSKIN, ::cSKIN , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_LOGINENTIRYSTRUCT
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cENTIRY            :=  WSAdvValue( oResponse,"_ENTIRY","string",NIL,"Property cENTIRY as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cFEDERALID         :=  WSAdvValue( oResponse,"_FEDERALID","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cID_ENTIRY         :=  WSAdvValue( oResponse,"_ID_ENTIRY","string",NIL,"Property cID_ENTIRY as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cNAME              :=  WSAdvValue( oResponse,"_NAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNICKNAME          :=  WSAdvValue( oResponse,"_NICKNAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSKIN              :=  WSAdvValue( oResponse,"_SKIN","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFSATALHOS

WSSTRUCT USERPORTAL_ARRAYOFSATALHOS
	WSDATA   oWSSATALHOS               AS USERPORTAL_SATALHOS OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFSATALHOS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFSATALHOS
	::oWSSATALHOS          := {} // Array Of  USERPORTAL_SATALHOS():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFSATALHOS
	Local oClone := USERPORTAL_ARRAYOFSATALHOS():NEW()
	oClone:oWSSATALHOS := NIL
	If ::oWSSATALHOS <> NIL 
		oClone:oWSSATALHOS := {}
		aEval( ::oWSSATALHOS , { |x| aadd( oClone:oWSSATALHOS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_ARRAYOFSATALHOS
	Local cSoap := ""
	aEval( ::oWSSATALHOS , {|x| cSoap := cSoap  +  WSSoapValue("SATALHOS", x , x , "SATALHOS", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFSATALHOS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SATALHOS","SATALHOS",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSATALHOS , USERPORTAL_SATALHOS():New() )
			::oWSSATALHOS[len(::oWSSATALHOS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFSOPERADORA

WSSTRUCT USERPORTAL_ARRAYOFSOPERADORA
	WSDATA   oWSSOPERADORA             AS USERPORTAL_SOPERADORA OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFSOPERADORA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFSOPERADORA
	::oWSSOPERADORA        := {} // Array Of  USERPORTAL_SOPERADORA():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFSOPERADORA
	Local oClone := USERPORTAL_ARRAYOFSOPERADORA():NEW()
	oClone:oWSSOPERADORA := NIL
	If ::oWSSOPERADORA <> NIL 
		oClone:oWSSOPERADORA := {}
		aEval( ::oWSSOPERADORA , { |x| aadd( oClone:oWSSOPERADORA , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_ARRAYOFSOPERADORA
	Local cSoap := ""
	aEval( ::oWSSOPERADORA , {|x| cSoap := cSoap  +  WSSoapValue("SOPERADORA", x , x , "SOPERADORA", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFSOPERADORA
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SOPERADORA","SOPERADORA",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSOPERADORA , USERPORTAL_SOPERADORA():New() )
			::oWSSOPERADORA[len(::oWSSOPERADORA)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFRDAVIEW

WSSTRUCT USERPORTAL_ARRAYOFRDAVIEW
	WSDATA   oWSRDAVIEW                AS USERPORTAL_RDAVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFRDAVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFRDAVIEW
	::oWSRDAVIEW           := {} // Array Of  USERPORTAL_RDAVIEW():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFRDAVIEW
	Local oClone := USERPORTAL_ARRAYOFRDAVIEW():NEW()
	oClone:oWSRDAVIEW := NIL
	If ::oWSRDAVIEW <> NIL 
		oClone:oWSRDAVIEW := {}
		aEval( ::oWSRDAVIEW , { |x| aadd( oClone:oWSRDAVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_ARRAYOFRDAVIEW
	Local cSoap := ""
	aEval( ::oWSRDAVIEW , {|x| cSoap := cSoap  +  WSSoapValue("RDAVIEW", x , x , "RDAVIEW", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFRDAVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_RDAVIEW","RDAVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSRDAVIEW , USERPORTAL_RDAVIEW():New() )
			::oWSRDAVIEW[len(::oWSRDAVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure SATALHOS

WSSTRUCT USERPORTAL_SATALHOS
	WSDATA   cCODMNU                   AS string OPTIONAL
	WSDATA   cDESCRI                   AS string OPTIONAL
	WSDATA   cIMAGEM                   AS string OPTIONAL
	WSDATA   cROTINA                   AS string OPTIONAL
	WSDATA   cWEBSRV                   AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_SATALHOS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_SATALHOS
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_SATALHOS
	Local oClone := USERPORTAL_SATALHOS():NEW()
	oClone:cCODMNU              := ::cCODMNU
	oClone:cDESCRI              := ::cDESCRI
	oClone:cIMAGEM              := ::cIMAGEM
	oClone:cROTINA              := ::cROTINA
	oClone:cWEBSRV              := ::cWEBSRV
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_SATALHOS
	Local cSoap := ""
	cSoap += WSSoapValue("CODMNU", ::cCODMNU, ::cCODMNU , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESCRI", ::cDESCRI, ::cDESCRI , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("IMAGEM", ::cIMAGEM, ::cIMAGEM , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("ROTINA", ::cROTINA, ::cROTINA , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("WEBSRV", ::cWEBSRV, ::cWEBSRV , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_SATALHOS
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODMNU            :=  WSAdvValue( oResponse,"_CODMNU","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCRI            :=  WSAdvValue( oResponse,"_DESCRI","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cIMAGEM            :=  WSAdvValue( oResponse,"_IMAGEM","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cROTINA            :=  WSAdvValue( oResponse,"_ROTINA","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cWEBSRV            :=  WSAdvValue( oResponse,"_WEBSRV","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure SOPERADORA

WSSTRUCT USERPORTAL_SOPERADORA
	WSDATA   cCODE                     AS string OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   oWSEMPRESA                AS USERPORTAL_ARRAYOFSEMPRESA OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_SOPERADORA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_SOPERADORA
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_SOPERADORA
	Local oClone := USERPORTAL_SOPERADORA():NEW()
	oClone:cCODE                := ::cCODE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:oWSEMPRESA           := IIF(::oWSEMPRESA = NIL , NIL , ::oWSEMPRESA:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_SOPERADORA
	Local cSoap := ""
	cSoap += WSSoapValue("CODE", ::cCODE, ::cCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESCRIPTION", ::cDESCRIPTION, ::cDESCRIPTION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("EMPRESA", ::oWSEMPRESA, ::oWSEMPRESA , "ARRAYOFSEMPRESA", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_SOPERADORA
	Local oNode3
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode3 :=  WSAdvValue( oResponse,"_EMPRESA","ARRAYOFSEMPRESA",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode3 != NIL
		::oWSEMPRESA := USERPORTAL_ARRAYOFSEMPRESA():New()
		::oWSEMPRESA:SoapRecv(oNode3)
	EndIf
Return

// WSDL Data Structure RDAVIEW

WSSTRUCT USERPORTAL_RDAVIEW
	WSDATA   cADDRESS                  AS string OPTIONAL
	WSDATA   cCARSOL                   AS string OPTIONAL
	WSDATA   cCEP                      AS string OPTIONAL
	WSDATA   cCNES                     AS string OPTIONAL
	WSDATA   cCNPFCPF                  AS string OPTIONAL
	WSDATA   cCODBB0                   AS string OPTIONAL
	WSDATA   cCODCR                    AS string OPTIONAL
	WSDATA   cCODE                     AS string OPTIONAL
	WSDATA   cCODLOC                   AS string OPTIONAL
	WSDATA   cCODOPE                   AS string OPTIONAL
	WSDATA   cCOMPLEN                  AS string OPTIONAL
	WSDATA   cDESLOC                   AS string OPTIONAL
	WSDATA   cDISTRICT                 AS string OPTIONAL
	WSDATA   cESTCR                    AS string OPTIONAL
	WSDATA   cIBGE                     AS string OPTIONAL
	WSDATA   cLOCAL                    AS string OPTIONAL
	WSDATA   oWSMESPRDA                AS USERPORTAL_ARRAYOFESPRDA OPTIONAL
	WSDATA   cNAME                     AS string OPTIONAL
	WSDATA   cNUMERO                   AS string OPTIONAL
	WSDATA   cPHONENUMBER              AS string OPTIONAL
	WSDATA   oWSRDAPLANOS              AS USERPORTAL_ARRAYOFPLANOSRDA OPTIONAL
	WSDATA   nRDARECNO                 AS integer OPTIONAL
	WSDATA   cREGANS                   AS string OPTIONAL
	WSDATA   cREGATEND                 AS string OPTIONAL
	WSDATA   cSIGCR                    AS string OPTIONAL
	WSDATA   cSPECIALITY               AS string OPTIONAL
	WSDATA   cSTATE                    AS string OPTIONAL
	WSDATA   cTIPPE                    AS string OPTIONAL
	WSDATA   cTISSVER                  AS string OPTIONAL
	WSDATA   cTPLOGRAD                 AS string OPTIONAL
	WSDATA   cTPPREST                  AS string OPTIONAL
	WSDATA   cZONE                     AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_RDAVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_RDAVIEW
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_RDAVIEW
	Local oClone := USERPORTAL_RDAVIEW():NEW()
	oClone:cADDRESS             := ::cADDRESS
	oClone:cCARSOL              := ::cCARSOL
	oClone:cCEP                 := ::cCEP
	oClone:cCNES                := ::cCNES
	oClone:cCNPFCPF             := ::cCNPFCPF
	oClone:cCODBB0              := ::cCODBB0
	oClone:cCODCR               := ::cCODCR
	oClone:cCODE                := ::cCODE
	oClone:cCODLOC              := ::cCODLOC
	oClone:cCODOPE              := ::cCODOPE
	oClone:cCOMPLEN             := ::cCOMPLEN
	oClone:cDESLOC              := ::cDESLOC
	oClone:cDISTRICT            := ::cDISTRICT
	oClone:cESTCR               := ::cESTCR
	oClone:cIBGE                := ::cIBGE
	oClone:cLOCAL               := ::cLOCAL
	oClone:oWSMESPRDA           := IIF(::oWSMESPRDA = NIL , NIL , ::oWSMESPRDA:Clone() )
	oClone:cNAME                := ::cNAME
	oClone:cNUMERO              := ::cNUMERO
	oClone:cPHONENUMBER         := ::cPHONENUMBER
	oClone:oWSRDAPLANOS         := IIF(::oWSRDAPLANOS = NIL , NIL , ::oWSRDAPLANOS:Clone() )
	oClone:nRDARECNO            := ::nRDARECNO
	oClone:cREGANS              := ::cREGANS
	oClone:cREGATEND            := ::cREGATEND
	oClone:cSIGCR               := ::cSIGCR
	oClone:cSPECIALITY          := ::cSPECIALITY
	oClone:cSTATE               := ::cSTATE
	oClone:cTIPPE               := ::cTIPPE
	oClone:cTISSVER             := ::cTISSVER
	oClone:cTPLOGRAD            := ::cTPLOGRAD
	oClone:cTPPREST             := ::cTPPREST
	oClone:cZONE                := ::cZONE
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_RDAVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("ADDRESS", ::cADDRESS, ::cADDRESS , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CARSOL", ::cCARSOL, ::cCARSOL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CEP", ::cCEP, ::cCEP , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CNES", ::cCNES, ::cCNES , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CNPFCPF", ::cCNPFCPF, ::cCNPFCPF , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CODBB0", ::cCODBB0, ::cCODBB0 , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CODCR", ::cCODCR, ::cCODCR , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CODE", ::cCODE, ::cCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CODLOC", ::cCODLOC, ::cCODLOC , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CODOPE", ::cCODOPE, ::cCODOPE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("COMPLEN", ::cCOMPLEN, ::cCOMPLEN , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESLOC", ::cDESLOC, ::cDESLOC , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DISTRICT", ::cDISTRICT, ::cDISTRICT , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("ESTCR", ::cESTCR, ::cESTCR , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("IBGE", ::cIBGE, ::cIBGE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("LOCAL", ::cLOCAL, ::cLOCAL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("MESPRDA", ::oWSMESPRDA, ::oWSMESPRDA , "ARRAYOFESPRDA", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NAME", ::cNAME, ::cNAME , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NUMERO", ::cNUMERO, ::cNUMERO , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("PHONENUMBER", ::cPHONENUMBER, ::cPHONENUMBER , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("RDAPLANOS", ::oWSRDAPLANOS, ::oWSRDAPLANOS , "ARRAYOFPLANOSRDA", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("RDARECNO", ::nRDARECNO, ::nRDARECNO , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("REGANS", ::cREGANS, ::cREGANS , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("REGATEND", ::cREGATEND, ::cREGATEND , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SIGCR", ::cSIGCR, ::cSIGCR , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SPECIALITY", ::cSPECIALITY, ::cSPECIALITY , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("STATE", ::cSTATE, ::cSTATE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TIPPE", ::cTIPPE, ::cTIPPE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TISSVER", ::cTISSVER, ::cTISSVER , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TPLOGRAD", ::cTPLOGRAD, ::cTPLOGRAD , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TPPREST", ::cTPPREST, ::cTPPREST , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("ZONE", ::cZONE, ::cZONE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_RDAVIEW
	Local oNode17
	Local oNode21
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cADDRESS           :=  WSAdvValue( oResponse,"_ADDRESS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCARSOL            :=  WSAdvValue( oResponse,"_CARSOL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCEP               :=  WSAdvValue( oResponse,"_CEP","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCNES              :=  WSAdvValue( oResponse,"_CNES","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCNPFCPF           :=  WSAdvValue( oResponse,"_CNPFCPF","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODBB0            :=  WSAdvValue( oResponse,"_CODBB0","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODCR             :=  WSAdvValue( oResponse,"_CODCR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODLOC            :=  WSAdvValue( oResponse,"_CODLOC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODOPE            :=  WSAdvValue( oResponse,"_CODOPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOMPLEN           :=  WSAdvValue( oResponse,"_COMPLEN","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESLOC            :=  WSAdvValue( oResponse,"_DESLOC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDISTRICT          :=  WSAdvValue( oResponse,"_DISTRICT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cESTCR             :=  WSAdvValue( oResponse,"_ESTCR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cIBGE              :=  WSAdvValue( oResponse,"_IBGE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cLOCAL             :=  WSAdvValue( oResponse,"_LOCAL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode17 :=  WSAdvValue( oResponse,"_MESPRDA","ARRAYOFESPRDA",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode17 != NIL
		::oWSMESPRDA := USERPORTAL_ARRAYOFESPRDA():New()
		::oWSMESPRDA:SoapRecv(oNode17)
	EndIf
	::cNAME              :=  WSAdvValue( oResponse,"_NAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNUMERO            :=  WSAdvValue( oResponse,"_NUMERO","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPHONENUMBER       :=  WSAdvValue( oResponse,"_PHONENUMBER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode21 :=  WSAdvValue( oResponse,"_RDAPLANOS","ARRAYOFPLANOSRDA",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode21 != NIL
		::oWSRDAPLANOS := USERPORTAL_ARRAYOFPLANOSRDA():New()
		::oWSRDAPLANOS:SoapRecv(oNode21)
	EndIf
	::nRDARECNO          :=  WSAdvValue( oResponse,"_RDARECNO","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cREGANS            :=  WSAdvValue( oResponse,"_REGANS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cREGATEND          :=  WSAdvValue( oResponse,"_REGATEND","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSIGCR             :=  WSAdvValue( oResponse,"_SIGCR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSPECIALITY        :=  WSAdvValue( oResponse,"_SPECIALITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSTATE             :=  WSAdvValue( oResponse,"_STATE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTIPPE             :=  WSAdvValue( oResponse,"_TIPPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTISSVER           :=  WSAdvValue( oResponse,"_TISSVER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTPLOGRAD          :=  WSAdvValue( oResponse,"_TPLOGRAD","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTPPREST           :=  WSAdvValue( oResponse,"_TPPREST","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cZONE              :=  WSAdvValue( oResponse,"_ZONE","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFSEMPRESA

WSSTRUCT USERPORTAL_ARRAYOFSEMPRESA
	WSDATA   oWSSEMPRESA               AS USERPORTAL_SEMPRESA OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFSEMPRESA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFSEMPRESA
	::oWSSEMPRESA          := {} // Array Of  USERPORTAL_SEMPRESA():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFSEMPRESA
	Local oClone := USERPORTAL_ARRAYOFSEMPRESA():NEW()
	oClone:oWSSEMPRESA := NIL
	If ::oWSSEMPRESA <> NIL 
		oClone:oWSSEMPRESA := {}
		aEval( ::oWSSEMPRESA , { |x| aadd( oClone:oWSSEMPRESA , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_ARRAYOFSEMPRESA
	Local cSoap := ""
	aEval( ::oWSSEMPRESA , {|x| cSoap := cSoap  +  WSSoapValue("SEMPRESA", x , x , "SEMPRESA", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFSEMPRESA
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SEMPRESA","SEMPRESA",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSEMPRESA , USERPORTAL_SEMPRESA():New() )
			::oWSSEMPRESA[len(::oWSSEMPRESA)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFESPRDA

WSSTRUCT USERPORTAL_ARRAYOFESPRDA
	WSDATA   oWSESPRDA                 AS USERPORTAL_ESPRDA OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFESPRDA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFESPRDA
	::oWSESPRDA            := {} // Array Of  USERPORTAL_ESPRDA():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFESPRDA
	Local oClone := USERPORTAL_ARRAYOFESPRDA():NEW()
	oClone:oWSESPRDA := NIL
	If ::oWSESPRDA <> NIL 
		oClone:oWSESPRDA := {}
		aEval( ::oWSESPRDA , { |x| aadd( oClone:oWSESPRDA , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_ARRAYOFESPRDA
	Local cSoap := ""
	aEval( ::oWSESPRDA , {|x| cSoap := cSoap  +  WSSoapValue("ESPRDA", x , x , "ESPRDA", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFESPRDA
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_ESPRDA","ESPRDA",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSESPRDA , USERPORTAL_ESPRDA():New() )
			::oWSESPRDA[len(::oWSESPRDA)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFPLANOSRDA

WSSTRUCT USERPORTAL_ARRAYOFPLANOSRDA
	WSDATA   oWSPLANOSRDA              AS USERPORTAL_PLANOSRDA OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFPLANOSRDA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFPLANOSRDA
	::oWSPLANOSRDA         := {} // Array Of  USERPORTAL_PLANOSRDA():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFPLANOSRDA
	Local oClone := USERPORTAL_ARRAYOFPLANOSRDA():NEW()
	oClone:oWSPLANOSRDA := NIL
	If ::oWSPLANOSRDA <> NIL 
		oClone:oWSPLANOSRDA := {}
		aEval( ::oWSPLANOSRDA , { |x| aadd( oClone:oWSPLANOSRDA , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_ARRAYOFPLANOSRDA
	Local cSoap := ""
	aEval( ::oWSPLANOSRDA , {|x| cSoap := cSoap  +  WSSoapValue("PLANOSRDA", x , x , "PLANOSRDA", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFPLANOSRDA
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PLANOSRDA","PLANOSRDA",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPLANOSRDA , USERPORTAL_PLANOSRDA():New() )
			::oWSPLANOSRDA[len(::oWSPLANOSRDA)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure SEMPRESA

WSSTRUCT USERPORTAL_SEMPRESA
	WSDATA   cCODE                     AS string OPTIONAL
	WSDATA   oWSCONTRATO               AS USERPORTAL_ARRAYOFSCONTRATO OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_SEMPRESA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_SEMPRESA
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_SEMPRESA
	Local oClone := USERPORTAL_SEMPRESA():NEW()
	oClone:cCODE                := ::cCODE
	oClone:oWSCONTRATO          := IIF(::oWSCONTRATO = NIL , NIL , ::oWSCONTRATO:Clone() )
	oClone:cDESCRIPTION         := ::cDESCRIPTION
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_SEMPRESA
	Local cSoap := ""
	cSoap += WSSoapValue("CODE", ::cCODE, ::cCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CONTRATO", ::oWSCONTRATO, ::oWSCONTRATO , "ARRAYOFSCONTRATO", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESCRIPTION", ::cDESCRIPTION, ::cDESCRIPTION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_SEMPRESA
	Local oNode2
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode2 :=  WSAdvValue( oResponse,"_CONTRATO","ARRAYOFSCONTRATO",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSCONTRATO := USERPORTAL_ARRAYOFSCONTRATO():New()
		::oWSCONTRATO:SoapRecv(oNode2)
	EndIf
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ESPRDA

WSSTRUCT USERPORTAL_ESPRDA
	WSDATA   cCODCBOS                  AS string OPTIONAL
	WSDATA   cCODESP                   AS string OPTIONAL
	WSDATA   cDESCBOS                  AS string OPTIONAL
	WSDATA   cDESESP                   AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ESPRDA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ESPRDA
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ESPRDA
	Local oClone := USERPORTAL_ESPRDA():NEW()
	oClone:cCODCBOS             := ::cCODCBOS
	oClone:cCODESP              := ::cCODESP
	oClone:cDESCBOS             := ::cDESCBOS
	oClone:cDESESP              := ::cDESESP
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_ESPRDA
	Local cSoap := ""
	cSoap += WSSoapValue("CODCBOS", ::cCODCBOS, ::cCODCBOS , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CODESP", ::cCODESP, ::cCODESP , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESCBOS", ::cDESCBOS, ::cDESCBOS , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESESP", ::cDESESP, ::cDESESP , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ESPRDA
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODCBOS           :=  WSAdvValue( oResponse,"_CODCBOS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODESP            :=  WSAdvValue( oResponse,"_CODESP","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCBOS           :=  WSAdvValue( oResponse,"_DESCBOS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESESP            :=  WSAdvValue( oResponse,"_DESESP","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure PLANOSRDA

WSSTRUCT USERPORTAL_PLANOSRDA
	WSDATA   cCODPLANO                 AS string OPTIONAL
	WSDATA   cDESPLANO                 AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_PLANOSRDA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_PLANOSRDA
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_PLANOSRDA
	Local oClone := USERPORTAL_PLANOSRDA():NEW()
	oClone:cCODPLANO            := ::cCODPLANO
	oClone:cDESPLANO            := ::cDESPLANO
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_PLANOSRDA
	Local cSoap := ""
	cSoap += WSSoapValue("CODPLANO", ::cCODPLANO, ::cCODPLANO , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESPLANO", ::cDESPLANO, ::cDESPLANO , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_PLANOSRDA
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODPLANO          :=  WSAdvValue( oResponse,"_CODPLANO","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESPLANO          :=  WSAdvValue( oResponse,"_DESPLANO","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFSCONTRATO

WSSTRUCT USERPORTAL_ARRAYOFSCONTRATO
	WSDATA   oWSSCONTRATO              AS USERPORTAL_SCONTRATO OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFSCONTRATO
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFSCONTRATO
	::oWSSCONTRATO         := {} // Array Of  USERPORTAL_SCONTRATO():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFSCONTRATO
	Local oClone := USERPORTAL_ARRAYOFSCONTRATO():NEW()
	oClone:oWSSCONTRATO := NIL
	If ::oWSSCONTRATO <> NIL 
		oClone:oWSSCONTRATO := {}
		aEval( ::oWSSCONTRATO , { |x| aadd( oClone:oWSSCONTRATO , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_ARRAYOFSCONTRATO
	Local cSoap := ""
	aEval( ::oWSSCONTRATO , {|x| cSoap := cSoap  +  WSSoapValue("SCONTRATO", x , x , "SCONTRATO", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFSCONTRATO
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SCONTRATO","SCONTRATO",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSCONTRATO , USERPORTAL_SCONTRATO():New() )
			::oWSSCONTRATO[len(::oWSSCONTRATO)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure SCONTRATO

WSSTRUCT USERPORTAL_SCONTRATO
	WSDATA   cCODE                     AS string OPTIONAL
	WSDATA   dDATCON                   AS date OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   cNOMCON                   AS string OPTIONAL
	WSDATA   cNUMCON                   AS string OPTIONAL
	WSDATA   oWSSUBCONTRATO            AS USERPORTAL_ARRAYOFSSUBCONTRATO OPTIONAL
	WSDATA   cTIPCON                   AS string OPTIONAL
	WSDATA   cVERCON                   AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_SCONTRATO
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_SCONTRATO
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_SCONTRATO
	Local oClone := USERPORTAL_SCONTRATO():NEW()
	oClone:cCODE                := ::cCODE
	oClone:dDATCON              := ::dDATCON
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:cNOMCON              := ::cNOMCON
	oClone:cNUMCON              := ::cNUMCON
	oClone:oWSSUBCONTRATO       := IIF(::oWSSUBCONTRATO = NIL , NIL , ::oWSSUBCONTRATO:Clone() )
	oClone:cTIPCON              := ::cTIPCON
	oClone:cVERCON              := ::cVERCON
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_SCONTRATO
	Local cSoap := ""
	cSoap += WSSoapValue("CODE", ::cCODE, ::cCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DATCON", ::dDATCON, ::dDATCON , "date", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESCRIPTION", ::cDESCRIPTION, ::cDESCRIPTION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NOMCON", ::cNOMCON, ::cNOMCON , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NUMCON", ::cNUMCON, ::cNUMCON , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SUBCONTRATO", ::oWSSUBCONTRATO, ::oWSSUBCONTRATO , "ARRAYOFSSUBCONTRATO", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TIPCON", ::cTIPCON, ::cTIPCON , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("VERCON", ::cVERCON, ::cVERCON , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_SCONTRATO
	Local oNode6
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dDATCON            :=  WSAdvValue( oResponse,"_DATCON","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNOMCON            :=  WSAdvValue( oResponse,"_NOMCON","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNUMCON            :=  WSAdvValue( oResponse,"_NUMCON","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode6 :=  WSAdvValue( oResponse,"_SUBCONTRATO","ARRAYOFSSUBCONTRATO",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode6 != NIL
		::oWSSUBCONTRATO := USERPORTAL_ARRAYOFSSUBCONTRATO():New()
		::oWSSUBCONTRATO:SoapRecv(oNode6)
	EndIf
	::cTIPCON            :=  WSAdvValue( oResponse,"_TIPCON","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cVERCON            :=  WSAdvValue( oResponse,"_VERCON","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFSSUBCONTRATO

WSSTRUCT USERPORTAL_ARRAYOFSSUBCONTRATO
	WSDATA   oWSSSUBCONTRATO           AS USERPORTAL_SSUBCONTRATO OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFSSUBCONTRATO
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFSSUBCONTRATO
	::oWSSSUBCONTRATO      := {} // Array Of  USERPORTAL_SSUBCONTRATO():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFSSUBCONTRATO
	Local oClone := USERPORTAL_ARRAYOFSSUBCONTRATO():NEW()
	oClone:oWSSSUBCONTRATO := NIL
	If ::oWSSSUBCONTRATO <> NIL 
		oClone:oWSSSUBCONTRATO := {}
		aEval( ::oWSSSUBCONTRATO , { |x| aadd( oClone:oWSSSUBCONTRATO , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_ARRAYOFSSUBCONTRATO
	Local cSoap := ""
	aEval( ::oWSSSUBCONTRATO , {|x| cSoap := cSoap  +  WSSoapValue("SSUBCONTRATO", x , x , "SSUBCONTRATO", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFSSUBCONTRATO
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SSUBCONTRATO","SSUBCONTRATO",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSSUBCONTRATO , USERPORTAL_SSUBCONTRATO():New() )
			::oWSSSUBCONTRATO[len(::oWSSSUBCONTRATO)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure SSUBCONTRATO

WSSTRUCT USERPORTAL_SSUBCONTRATO
	WSDATA   cCODE                     AS string OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   dDTVSUB                   AS date OPTIONAL
	WSDATA   oWSFAMILIA                AS USERPORTAL_ARRAYOFSFAMILIA OPTIONAL
	WSDATA   cNOMSUB                   AS string OPTIONAL
	WSDATA   cSUBCON                   AS string OPTIONAL
	WSDATA   cVERSUB                   AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_SSUBCONTRATO
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_SSUBCONTRATO
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_SSUBCONTRATO
	Local oClone := USERPORTAL_SSUBCONTRATO():NEW()
	oClone:cCODE                := ::cCODE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:dDTVSUB              := ::dDTVSUB
	oClone:oWSFAMILIA           := IIF(::oWSFAMILIA = NIL , NIL , ::oWSFAMILIA:Clone() )
	oClone:cNOMSUB              := ::cNOMSUB
	oClone:cSUBCON              := ::cSUBCON
	oClone:cVERSUB              := ::cVERSUB
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_SSUBCONTRATO
	Local cSoap := ""
	cSoap += WSSoapValue("CODE", ::cCODE, ::cCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESCRIPTION", ::cDESCRIPTION, ::cDESCRIPTION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DTVSUB", ::dDTVSUB, ::dDTVSUB , "date", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("FAMILIA", ::oWSFAMILIA, ::oWSFAMILIA , "ARRAYOFSFAMILIA", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NOMSUB", ::cNOMSUB, ::cNOMSUB , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SUBCON", ::cSUBCON, ::cSUBCON , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("VERSUB", ::cVERSUB, ::cVERSUB , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_SSUBCONTRATO
	Local oNode4
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dDTVSUB            :=  WSAdvValue( oResponse,"_DTVSUB","date",NIL,NIL,NIL,"D",NIL,NIL) 
	oNode4 :=  WSAdvValue( oResponse,"_FAMILIA","ARRAYOFSFAMILIA",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode4 != NIL
		::oWSFAMILIA := USERPORTAL_ARRAYOFSFAMILIA():New()
		::oWSFAMILIA:SoapRecv(oNode4)
	EndIf
	::cNOMSUB            :=  WSAdvValue( oResponse,"_NOMSUB","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSUBCON            :=  WSAdvValue( oResponse,"_SUBCON","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cVERSUB            :=  WSAdvValue( oResponse,"_VERSUB","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFSFAMILIA

WSSTRUCT USERPORTAL_ARRAYOFSFAMILIA
	WSDATA   oWSSFAMILIA               AS USERPORTAL_SFAMILIA OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_ARRAYOFSFAMILIA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_ARRAYOFSFAMILIA
	::oWSSFAMILIA          := {} // Array Of  USERPORTAL_SFAMILIA():New()
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_ARRAYOFSFAMILIA
	Local oClone := USERPORTAL_ARRAYOFSFAMILIA():NEW()
	oClone:oWSSFAMILIA := NIL
	If ::oWSSFAMILIA <> NIL 
		oClone:oWSSFAMILIA := {}
		aEval( ::oWSSFAMILIA , { |x| aadd( oClone:oWSSFAMILIA , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_ARRAYOFSFAMILIA
	Local cSoap := ""
	aEval( ::oWSSFAMILIA , {|x| cSoap := cSoap  +  WSSoapValue("SFAMILIA", x , x , "SFAMILIA", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_ARRAYOFSFAMILIA
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SFAMILIA","SFAMILIA",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSFAMILIA , USERPORTAL_SFAMILIA():New() )
			::oWSSFAMILIA[len(::oWSSFAMILIA)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure SFAMILIA

WSSTRUCT USERPORTAL_SFAMILIA
	WSDATA   cBENEFI                   AS string OPTIONAL
	WSDATA   cCODE                     AS string OPTIONAL
	WSDATA   cCODPLA                   AS string OPTIONAL
	WSDATA   dDATCAR                   AS date OPTIONAL
	WSDATA   dDATINC                   AS date OPTIONAL
	WSDATA   dDATNAS                   AS date OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   cDESPLA                   AS string OPTIONAL
	WSDATA   cDESUSU                   AS string OPTIONAL
	WSDATA   cESTCIV                   AS string OPTIONAL
	WSDATA   cFAMILIA                  AS string OPTIONAL
	WSDATA   cGRAUPA                   AS string OPTIONAL
	WSDATA   cIDADE                    AS string OPTIONAL
	WSDATA   cNOMBEN                   AS string OPTIONAL
	WSDATA   cRESFAM                   AS string OPTIONAL
	WSDATA   cSEXO                     AS string OPTIONAL
	WSDATA   cTIPUSU                   AS string OPTIONAL
	WSDATA   cVERPLA                   AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT USERPORTAL_SFAMILIA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT USERPORTAL_SFAMILIA
Return

WSMETHOD CLONE WSCLIENT USERPORTAL_SFAMILIA
	Local oClone := USERPORTAL_SFAMILIA():NEW()
	oClone:cBENEFI              := ::cBENEFI
	oClone:cCODE                := ::cCODE
	oClone:cCODPLA              := ::cCODPLA
	oClone:dDATCAR              := ::dDATCAR
	oClone:dDATINC              := ::dDATINC
	oClone:dDATNAS              := ::dDATNAS
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:cDESPLA              := ::cDESPLA
	oClone:cDESUSU              := ::cDESUSU
	oClone:cESTCIV              := ::cESTCIV
	oClone:cFAMILIA             := ::cFAMILIA
	oClone:cGRAUPA              := ::cGRAUPA
	oClone:cIDADE               := ::cIDADE
	oClone:cNOMBEN              := ::cNOMBEN
	oClone:cRESFAM              := ::cRESFAM
	oClone:cSEXO                := ::cSEXO
	oClone:cTIPUSU              := ::cTIPUSU
	oClone:cVERPLA              := ::cVERPLA
Return oClone

WSMETHOD SOAPSEND WSCLIENT USERPORTAL_SFAMILIA
	Local cSoap := ""
	cSoap += WSSoapValue("BENEFI", ::cBENEFI, ::cBENEFI , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CODE", ::cCODE, ::cCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CODPLA", ::cCODPLA, ::cCODPLA , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DATCAR", ::dDATCAR, ::dDATCAR , "date", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DATINC", ::dDATINC, ::dDATINC , "date", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DATNAS", ::dDATNAS, ::dDATNAS , "date", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESCRIPTION", ::cDESCRIPTION, ::cDESCRIPTION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESPLA", ::cDESPLA, ::cDESPLA , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESUSU", ::cDESUSU, ::cDESUSU , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("ESTCIV", ::cESTCIV, ::cESTCIV , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("FAMILIA", ::cFAMILIA, ::cFAMILIA , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("GRAUPA", ::cGRAUPA, ::cGRAUPA , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("IDADE", ::cIDADE, ::cIDADE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NOMBEN", ::cNOMBEN, ::cNOMBEN , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("RESFAM", ::cRESFAM, ::cRESFAM , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SEXO", ::cSEXO, ::cSEXO , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TIPUSU", ::cTIPUSU, ::cTIPUSU , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("VERPLA", ::cVERPLA, ::cVERPLA , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT USERPORTAL_SFAMILIA
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cBENEFI            :=  WSAdvValue( oResponse,"_BENEFI","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODPLA            :=  WSAdvValue( oResponse,"_CODPLA","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dDATCAR            :=  WSAdvValue( oResponse,"_DATCAR","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::dDATINC            :=  WSAdvValue( oResponse,"_DATINC","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::dDATNAS            :=  WSAdvValue( oResponse,"_DATNAS","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESPLA            :=  WSAdvValue( oResponse,"_DESPLA","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESUSU            :=  WSAdvValue( oResponse,"_DESUSU","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cESTCIV            :=  WSAdvValue( oResponse,"_ESTCIV","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cFAMILIA           :=  WSAdvValue( oResponse,"_FAMILIA","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cGRAUPA            :=  WSAdvValue( oResponse,"_GRAUPA","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cIDADE             :=  WSAdvValue( oResponse,"_IDADE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNOMBEN            :=  WSAdvValue( oResponse,"_NOMBEN","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cRESFAM            :=  WSAdvValue( oResponse,"_RESFAM","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSEXO              :=  WSAdvValue( oResponse,"_SEXO","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTIPUSU            :=  WSAdvValue( oResponse,"_TIPUSU","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cVERPLA            :=  WSAdvValue( oResponse,"_VERPLA","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return


